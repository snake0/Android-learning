#!/usr/bin/env python3
# assemble smali and generate signed apk

import subprocess as sp
import sys
import os
import zipfile

baksmaliOut = "/Users/esaki/AndroidStudioProjects/baksmaliOut"
unzipOut = "/Users/esaki/AndroidStudioProjects/unzipOut"
apksigner = "/Users/esaki/Library/Android/sdk/build-tools/28.0.3/lib/apksigner.jar"
smaliOut = "/Users/esaki/AndroidStudioProjects/smaliOut"

kspass = "nathan"

commands = []


def smali():
    global commands
    apkname = sys.argv[1].split('/')[-1].split('.')[0]

    if len(sys.argv) != 2:
        print("usage: ./mySmali [input.apk] [modified]")
        sys.exit(1)

    if not os.access(unzipOut + "/" + apkname, os.F_OK):
        print("please ./myBaksmali before using mySmali")
        exit(1)

    commands += [
        [
            "java", "-jar", "smali-2.2.5.jar", "assemble",
            "-o", "classes.dex",
            baksmaliOut + "/" + apkname
        ], [
            "zip", "-u", sys.argv[1],
            "classes.dex"
        ], [
            "rm", "classes.dex"
        ]
    ]


def addDex():
    global commands
    apkname = sys.argv[1].split('/')[-1].split('.')[0]

    commands += [
        [
            "javac", "ToInvoke.java"
        ], [
            "dx", "--dex", "--output=classes2.dex", "ToInvoke.class"
        ], [
            "zip", "-u", sys.argv[1], "classes2.dex"
        ], [
            "rm", "ToInvoke.class"
        ]
    ]

def resign():
    global commands
    commands += [[
        "java", "-jar", apksigner, "sign",
        "--ks", "keys/key.jks",
        "--ks-key-alias", "key0",
        "--ks-pass", "pass:" + kspass,
        "--key-pass", "pass:" + kspass,
        sys.argv[1]
    ]]

def app_process():
    global commands
    commands += [
        [
            "javac", "Helloworld.java"
        ], [
            "dx", "--dex", "--output=Helloworld.dex", "Helloworld.class"
        ], [
            "adb", "push", "Helloworld.dex", "/data/local/tmp/"
        ]
    ]


def substitute():
    global commands
    # apkname = sys.argv[1].split('/')[-1].split('.')[0]
    commands += [
        [
            "javac", "com/example/helloworld/ToSubstitute.java"
        ], [
            "dx", "--dex", "--output=substitute.dex", "com/example/helloworld/ToSubstitute.class"
        ], [
            "rm", "com/example/helloworld/ToSubstitute.class"
        ], [
            "adb", "push", "substitute.dex", "/data/local/tmp"
        ], [
            "rm", "substitute.dex"
        ]
    ]



def funcs():
    substitute()


def main():
    funcs()
    for command in commands:
        sp.check_call(command)
    # resign()


main()
